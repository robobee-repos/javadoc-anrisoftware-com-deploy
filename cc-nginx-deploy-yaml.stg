/*
 * Mandatory:
 *
 * vars.javadoc.ssh.publicKey
 * vars.javadoc.revision
 * vars.javadoc.hosts
 * vars.javadoc.storage.name
 * vars.javadoc.indexHtml
 * 
 * vars.nginx.image.name
 * vars.nginx.image.version
 * 
 * vars.rsync.image.name
 * vars.rsync.image.version
 * 
 * Optional:
 * 
 * vars.javadoc.affinity.key
 * vars.javadoc.affinity.name
 * vars.javadoc.affinity.required
 * vars.javadoc.allowOnMaster
 * vars.javadoc.tolerations[].effect
 * vars.javadoc.tolerations[].key
 * vars.javadoc.tolerations[].value
 * 
 * vars.nginx.limits.cpu
 * vars.nginx.limits.memory
 * vars.nginx.requests.cpu
 * vars.nginx.requests.memory
 * 
 * vars.nginx.workerProcesses
 * vars.nginx.workerConnections
 * vars.nginx.clientMaxBodySize
 * vars.nginx.readTimeout
 * 
 * vars.rsync.limits.cpu
 * vars.rsync.limits.memory
 * vars.rsync.requests.cpu
 * vars.rsync.requests.memory
 */

import "robobeerun-templates/affinities.stg"
import "robobeerun-templates/nginx_config.stg"
import "robobeerun-templates/nginx_probe.stg"
import "robobeerun-templates/tolerations.stg"
import "robobeerun-templates/resources.stg"

/*
 *
 */
cc-nginx-deploy-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-<vars.javadoc.revision>
  namespace: javadoc-anrisoftware-com
data:
  nginx.conf: |
    <nginxDefaults(vars.nginx)>
    http {
        <nginxHttpDefaults(vars.nginx)>
        <nginxVirtualHosts(vars.javadoc.hosts)>
        server {
            listen 8080;
            listen [::]:8080;
            server_name <first(vars.javadoc.hosts)>;
            root /var/www/html;
            index index.html index.htm;
            <nginxDefaultLocations()>
        }
    }

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: index-html-<vars.javadoc.revision>
  namespace: javadoc-anrisoftware-com
data:
  index.html: |
    <vars.javadoc.indexHtml>
---

apiVersion: v1
kind: Secret
metadata:
  name: ssh-<vars.javadoc.revision>
  namespace: javadoc-anrisoftware-com
type: Opaque
data:
  auth-key: <vars.javadoc.ssh.publicKey;format="base64">

---

apiVersion: v1
kind: Service
metadata:
  name: javadoc
  namespace: javadoc-anrisoftware-com
spec:
  ports:
  - name: "http"
    port: 8080
    targetPort: 8080
  selector:
    app: javadoc

---

apiVersion: v1
kind: Service
metadata:
  name: ssh
  namespace: javadoc-anrisoftware-com
spec:
  type: NodePort
  ports:
  - name: "ssh"
    port: 2222
    targetPort: 2222
    nodePort: 30101
  selector:
    app: javadoc

---

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: javadoc
  namespace: javadoc-anrisoftware-com
  labels:
    app: javadoc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: javadoc
  template:
    metadata:
      labels:
        app: javadoc
    spec:
      containers:
      - image: <vars.nginx.image.name>:<vars.nginx.image.version>
        name: nginx
        ports:
        - containerPort: 8080
          name: "http"
        <nginxReadinessProbe(vars.nginx)>
        <resourcesGroup(vars.nginx)>
        volumeMounts:
        - mountPath: "/var/www/html"
          name: "data"
          subPath: "javadoc_public"
        - mountPath: "/nginx-in"
          name: "nginx-config"
        - mountPath: "/var/www/html/index.html"
          name: "index-html"
          subPath: "index.html"
      - image: <vars.rsync.image.name>:<vars.rsync.image.version>
        name: rsync
        env:
        - name: RSYNC_AUTHORIZED_KEY
          valueFrom:
            secretKeyRef:
              name: ssh-<vars.javadoc.revision>
              key: auth-key
        - name: USER
          value: "root"
        ports:
        - containerPort: 2222
          name: ssh
        readinessProbe:
          exec:
            command:
            - /readiness.sh
            - /data/index.html
          initialDelaySeconds: 5
          timeoutSeconds: 1
        <resourcesGroup(vars.rsync)>
        volumeMounts:
        - mountPath: "/data"
          name: "data"
          subPath: "javadoc_public"
      restartPolicy: Always
      volumes:
      - name: "data"
        persistentVolumeClaim:
          claimName: "<vars.javadoc.storage.name>"
      - name: "nginx-config"
        configMap:
          name: "nginx-config-<vars.javadoc.revision>"
      - name: "index-html"
        configMap:
          name: "index-html-<vars.javadoc.revision>"
      <affinitiesGroup(vars.javadoc.affinity)>
      <tolerationMasterGroup(vars.javadoc.allowOnMaster)>
      <tolerationsGroup(vars.javadoc.tolerations, vars.javadoc.allowOnMaster)>

---
>>
